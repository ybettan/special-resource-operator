name: e2e

on:
  pull_request_target:
    types: [opened, synchronize, reopened, labeled]
    paths-ignore:
      - "**/README.md"
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}_build_${{ github.head_ref }}
      cancel-in-progress: true
    if: (github.event.action == 'labeled' && github.event.label.name == 'ok-to-test') ||
        (github.event.pull_request.head.repo.full_name == 'openshift-psap/special-resource-operator')
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        persist-credentials: false
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17.2'
    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 10
    - run: |
        make go-install-binaries
        make local-image-build
      env:
        TAG: pr-${{ steps.short-sha.outputs.sha }}
    - uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_PASSWORD}}
    - run: make local-image-push
      env:
        TAG: pr-${{ steps.short-sha.outputs.sha }}
  e2e:
    name: e2e-test
    needs: build
    runs-on: ubuntu-latest
    concurrency: sro-upstream-ci
    if: (github.event.action == 'labeled' && github.event.label.name == 'ok-to-test') ||
        (github.event.pull_request.head.repo.full_name == 'openshift-psap/special-resource-operator')
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        persist-credentials: false
    - uses: actions/setup-go@v2
      with:
        go-version: '1.17.2'
    - uses: benjlevesque/short-sha@v1.2
      id: short-sha
      with:
        length: 10
    - uses: redhat-actions/oc-login@v1
      with:
        openshift_server_url: ${{ secrets.OPENSHIFT_SERVER }}
        openshift_username: ${{ secrets.OPENSHIFT_USERNAME }}
        openshift_password: ${{ secrets.OPENSHIFT_PASSWORD }}
        insecure_skip_tls_verify: true
        namespace: default
    - name: Forced delete all SpecialResources from previous runs
      run: |
          for i in `oc get specialresources.sro.openshift.io -o jsonpath='{.items[*].metadata.name}'`;
            do oc patch specialresources.sro.openshift.io $i -p '{"metadata":{"finalizers":[]}}' --type=merge;
            oc delete specialresources.sro.openshift.io $i --ignore-not-found
          done
    - run: make deploy
      env:
        TAG: pr-${{ steps.short-sha.outputs.sha }}
    - run: make e2e-test
      id: teste2e
    - run: oc logs deployment/special-resource-controller-manager -n openshift-special-resource-operator -c manager
      if: always() && steps.teste2e.outcome == 'failure'
    - run: make undeploy
      if: always()
      env:
        TAG: pr-${{ steps.short-sha.outputs.sha }}
